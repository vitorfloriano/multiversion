name: Kubebuilder Upgrade
on:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write

jobs:
  upgrade:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOPATH: /home/runner/go
      PROJECT_PATH: /home/runner/go/src/github.com/kubebuilder/project
    
    steps:
      - name: Setup
        run: |
          # Setup Go environment
          mkdir -p $GOPATH/{bin,pkg,src/github.com/kubebuilder}
          echo "$GOPATH/bin:/usr/local/bin" >> $GITHUB_PATH
          
          # Git config
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout to GOPATH
        uses: actions/checkout@v4
        with:
          path: ${{ env.PROJECT_PATH }}
          fetch-depth: 0

      - name: Install Kubebuilder
        run: |
          curl -fsSL "https://github.com/kubernetes-sigs/kubebuilder/releases/download/${{ github.event.inputs.to_version }}/kubebuilder_linux_amd64" \
            -o /tmp/kubebuilder
          chmod +x /tmp/kubebuilder
          sudo cp /tmp/kubebuilder /usr/local/bin/kubebuilder
          kubebuilder version

      - name: Upgrade Scaffold
        run: |
          cd $PROJECT_PATH
          
          # Create upgrade branch
          git checkout -b upgrade-${{ github.event.inputs.to_version }}
          
          # Generate new scaffold
          kubebuilder alpha generate
          
          # Commit changes
          git add .
          git commit -m "upgrade: kubebuilder ${{ github.event.inputs.from_version }} ‚Üí ${{ github.event.inputs.to_version }}" || echo "No changes"

      - name: Resolve Conflicts with AI
        run: |
          cd $PROJECT_PATH
          
          # Try merge to detect conflicts
          git checkout main
          if ! git merge upgrade-${{ github.event.inputs.to_version }} --no-commit; then
            echo "Conflicts detected, resolving with AI..."
            git reset --hard HEAD
            git checkout upgrade-${{ github.event.inputs.to_version }}
            git merge main --no-commit || true
            
            # Find conflict files
            CONFLICTS=$(git diff --name-only --diff-filter=U 2>/dev/null || true)
            
            for file in $CONFLICTS; do
              # Skip large/binary files
              [ $(wc -c < "$file") -gt 50000 ] && continue
              file "$file" | grep -q "text" || continue
              
              # Resolve with AI
              cat > /tmp/prompt.txt << 'EOF'
Resolve this Kubebuilder upgrade merge conflict. Return only the clean file content with no conflict markers:

EOF
              cat "$file" >> /tmp/prompt.txt
              
              # Call GitHub Models API
              jq -n \
                --rawfile prompt /tmp/prompt.txt \
                '{model:"gpt-4o", messages:[{role:"user", content:$prompt}], temperature:0.1}' | \
              curl -s --fail \
                -H "Content-Type: application/json" \
                -H "Authorization: Bearer $GITHUB_TOKEN" \
                -d @- \
                "https://models.inference.ai.azure.com/chat/completions" | \
              jq -r '.choices[0].message.content' > "$file"
              
              echo "Resolved: $file"
            done
            
            git add .
            git commit -m "fix: resolve conflicts with AI"
          fi

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.PROJECT_PATH }}
          branch: upgrade-${{ github.event.inputs.to_version }}
          title: "‚¨ÜÔ∏è Upgrade Kubebuilder ${{ github.event.inputs.from_version }} ‚Üí ${{ github.event.inputs.to_version }}"
          body: |
            ## Kubebuilder Upgrade
            
            Automated upgrade from **${{ github.event.inputs.from_version }}** to **${{ github.event.inputs.to_version }}**
            
            - ‚úÖ Scaffold updated with new version
            - ü§ñ Conflicts resolved with AI assistance
            
            **Review checklist:**
            - [ ] Custom code preserved
            - [ ] Build passes: `make build`
            - [ ] Tests pass: `make test`
          draft: true
